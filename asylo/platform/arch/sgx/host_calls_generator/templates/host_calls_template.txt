{{ generated_file_warning }}

/*
 *
 * Copyright 2017 Asylo authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

#include <errno.h>
#include <sys/types.h>

#include "common/inc/sgx_trts.h"
#include "asylo/platform/arch/sgx/trusted/generated_bridge_t.h"

#ifdef __cplusplus
extern "C" {
#endif

{% for host_call in host_calls -%}
{{ host_call.return_type }} enc_untrusted_{{ host_call.name }}(
    {{- comma_separate_parameters(host_call.parameters) }}) {
  {%- if host_call.return_type == 'void' %}
  sgx_status_t status = ocall_enc_untrusted_{{ host_call.name }}(
      {{- comma_separate_arguments(host_call.parameters) }});
  if (status != SGX_SUCCESS) {
    errno = EINTR;
  }
  {%- else %}
  {{ host_call.return_type }} result;
  sgx_status_t status = ocall_enc_untrusted_{{ host_call.name }}(
      {%- if host_call.parameters|count == 0 -%}
        &result
      {%- else -%}
        &result, {{ comma_separate_arguments(host_call.parameters) }}
      {%- endif -%});
  if (status != SGX_SUCCESS) {
    errno = EINTR;
    return {{ host_call.failure_return_expression }};
  }
  return result;
  {%- endif %}
}

{% endfor -%}
#ifdef __cplusplus
}  // extern "C"
#endif
