/*
 *
 * Copyright 2019 Asylo authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// EDL file for primitives enclave infrastructure. Defines function calls across
// enclave boundary. The "trusted" scope defines "ecall" functions that are
// called on the host side and enter the enclave and execute inside it. The
// "untrusted" scope defines "ocall" functions that cross the enclave boundary
// in the opposite direction - called from within enclave, executed on
// the host side.
//
// See generate_bridge.sh for build instruction.
//
// In addition, new function definitions must be added to untrusted/ocalls.cc
// and to trusted/ecalls.cc for untrusted and trusted functions respectively.
//
// Once new functions are defined and generated, user-friendly wrappers need to
// be added to untrusted/enclave_calls.* and trusted/host_calls.* respectively.
enclave {
  trusted {
    // Invokes the trusted entry point designated by `selector`.
    public int ecall_dispatch_trusted_call(uint64_t selector,
        [user_check] void *buffer);
  };

};
