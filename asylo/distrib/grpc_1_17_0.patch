diff -Naur -x '*~' -x '*.orig' bazel/grpc_deps.bzl bazel/grpc_deps.bzl
--- bazel/grpc_deps.bzl
+++ bazel/grpc_deps.bzl
@@ -1,5 +1,7 @@
 """Load dependencies needed to compile and test the grpc library as a 3rd-party consumer."""
 
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
 def grpc_deps():
     """Loads dependencies need to compile and test the grpc library."""
 
@@ -99,14 +101,14 @@
     )
 
     if "boringssl" not in native.existing_rules():
-        native.http_archive(
+        http_archive(
             name = "boringssl",
             # on the chromium-stable-with-bazel branch
             url = "https://boringssl.googlesource.com/boringssl/+archive/afc30d43eef92979b05776ec0963c9cede5fb80f.tar.gz",
         )
 
     if "com_github_madler_zlib" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_madler_zlib",
             build_file = "@com_github_grpc_grpc//third_party:zlib.BUILD",
             strip_prefix = "zlib-cacf7f1d4e3d44d871b605da3b647f07d718623f",
@@ -114,14 +116,14 @@
         )
 
     if "com_google_protobuf" not in native.existing_rules():
-        native.http_archive(
+        http_archive(
             name = "com_google_protobuf",
             strip_prefix = "protobuf-48cb18e5c419ddd23d9badcfe4e9df7bde1979b2",
             url = "https://github.com/google/protobuf/archive/48cb18e5c419ddd23d9badcfe4e9df7bde1979b2.tar.gz",
         )
 
     if "com_github_nanopb_nanopb" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_nanopb_nanopb",
             build_file = "@com_github_grpc_grpc//third_party:nanopb.BUILD",
             strip_prefix = "nanopb-f8ac463766281625ad710900479130c7fcb4d63b",
@@ -129,7 +131,7 @@
         )
 
     if "com_github_google_googletest" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_google_googletest",
             build_file = "@com_github_grpc_grpc//third_party:gtest.BUILD",
             strip_prefix = "googletest-ec44c6c1675c25b9827aacd08c02433cccde7780",
@@ -137,14 +139,14 @@
         )
 
     if "com_github_gflags_gflags" not in native.existing_rules():
-        native.http_archive(
+        http_archive(
             name = "com_github_gflags_gflags",
             strip_prefix = "gflags-30dbc81fb5ffdc98ea9b14b1918bfe4e8779b26e",
             url = "https://github.com/gflags/gflags/archive/30dbc81fb5ffdc98ea9b14b1918bfe4e8779b26e.tar.gz",
         )
 
     if "com_github_google_benchmark" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_google_benchmark",
             build_file = "@com_github_grpc_grpc//third_party:benchmark.BUILD",
             strip_prefix = "benchmark-9913418d323e64a0111ca0da81388260c2bbe1e9",
@@ -152,7 +154,7 @@
         )
 
     if "com_github_cares_cares" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_cares_cares",
             build_file = "@com_github_grpc_grpc//third_party:cares/cares.BUILD",
             strip_prefix = "c-ares-3be1924221e1326df520f8498d704a5c4c8d0cce",
@@ -160,14 +162,14 @@
         )
 
     if "com_google_absl" not in native.existing_rules():
-        native.http_archive(
+        http_archive(
             name = "com_google_absl",
             strip_prefix = "abseil-cpp-cd95e71df6eaf8f2a282b1da556c2cf1c9b09207",
             url = "https://github.com/abseil/abseil-cpp/archive/cd95e71df6eaf8f2a282b1da556c2cf1c9b09207.tar.gz",
         )
 
     if "com_github_bazelbuild_bazeltoolchains" not in native.existing_rules():
-        native.http_archive(
+        http_archive(
             name = "com_github_bazelbuild_bazeltoolchains",
             strip_prefix = "bazel-toolchains-280edaa6f93623074513d2b426068de42e62ea4d",
             urls = [
@@ -178,7 +180,7 @@
         )
 
     if "io_opencensus_cpp" not in native.existing_rules():
-      native.http_archive(
+      http_archive(
             name = "io_opencensus_cpp",
             strip_prefix = "opencensus-cpp-fdf0f308b1631bb4a942e32ba5d22536a6170274",
             url = "https://github.com/census-instrumentation/opencensus-cpp/archive/fdf0f308b1631bb4a942e32ba5d22536a6170274.tar.gz",
@@ -200,7 +202,7 @@
     )
 
     if "com_github_twisted_twisted" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_twisted_twisted",
             strip_prefix = "twisted-twisted-17.5.0",
             url = "https://github.com/twisted/twisted/archive/twisted-17.5.0.zip",
@@ -208,7 +210,7 @@
         )
 
     if "com_github_yaml_pyyaml" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_yaml_pyyaml",
             strip_prefix = "pyyaml-3.12",
             url = "https://github.com/yaml/pyyaml/archive/3.12.zip",
@@ -216,7 +218,7 @@
         )
 
     if "com_github_twisted_incremental" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_twisted_incremental",
             strip_prefix = "incremental-incremental-17.5.0",
             url = "https://github.com/twisted/incremental/archive/incremental-17.5.0.zip",
@@ -224,7 +226,7 @@
         )
 
     if "com_github_zopefoundation_zope_interface" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_zopefoundation_zope_interface",
             strip_prefix = "zope.interface-4.4.3",
             url = "https://github.com/zopefoundation/zope.interface/archive/4.4.3.zip",
@@ -232,7 +234,7 @@
         )
 
     if "com_github_twisted_constantly" not in native.existing_rules():
-        native.new_http_archive(
+        http_archive(
             name = "com_github_twisted_constantly",
             strip_prefix = "constantly-15.1.0",
             url = "https://github.com/twisted/constantly/archive/15.1.0.zip",
diff -Naur -x '*~' -x '*.orig' include/grpc/impl/codegen/port_platform.h include/grpc/impl/codegen/port_platform.h
--- include/grpc/impl/codegen/port_platform.h
+++ include/grpc/impl/codegen/port_platform.h
@@ -178,6 +178,26 @@
 #else /* musl libc */
 #define GPR_MUSL_LIBC_COMPAT 1
 #endif
+#elif defined(__ASYLO__)
+#define GPR_ARCH_64 1
+#define GPR_CPU_POSIX 1
+#define GPR_GCC_TLS 1
+#define GPR_PLATFORM_STRING "asylo"
+#define GPR_GCC_SYNC 1
+#define GPR_POSIX_SYNC 1
+#define GPR_POSIX_STRING 1
+#define GPR_POSIX_LOG 1
+#define GPR_POSIX_TIME 1
+#define GPR_POSIX_ENV 1
+#define GPR_ASYLO 1
+#define GRPC_POSIX_SOCKET 1
+#define GRPC_POSIX_SOCKETADDR
+#define GRPC_POSIX_SOCKETUTILS 1
+#define GRPC_TIMER_USE_GENERIC 1
+#define GRPC_POSIX_NO_SPECIAL_WAKEUP_FD 1
+#define GRPC_POSIX_WAKEUP_FD 1
+#define GRPC_ARES 0
+#define GPR_NO_AUTODETECT_PLATFORM 1
 #elif defined(__APPLE__)
 #include <Availability.h>
 #include <TargetConditionals.h>
diff -Naur -x '*~' -x '*.orig' test/core/end2end/generate_tests.bzl test/core/end2end/generate_tests.bzl
--- test/core/end2end/generate_tests.bzl
+++ test/core/end2end/generate_tests.bzl
@@ -371,6 +371,7 @@
             "end2end_tests.h",
         ],
         language = "C++",
+        visibility = ["//visibility:public"],
         deps = [
             ":cq_verifier",
             ":ssl_test_data",
diff -Naur -x '*~' -x '*.orig' third_party/nanopb/pb.h third_party/nanopb/pb.h
--- third_party/nanopb/pb.h
+++ third_party/nanopb/pb.h
@@ -22,7 +22,7 @@
 /* #define PB_MAX_REQUIRED_FIELDS 256 */
 
 /* Add support for tag numbers > 255 and fields larger than 255 bytes. */
-/* #define PB_FIELD_16BIT 1 */
+#define PB_FIELD_16BIT 1
 
 /* Add support for tag numbers > 65536 and fields larger than 65536 bytes. */
 /* #define PB_FIELD_32BIT 1 */ 
